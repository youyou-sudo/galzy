name: Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      - name: Build Docker images with Bun
        run: bun docker

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and Push Docker images
        id: push_images
        run: |
          set -e

          VERSION_API=$(docker images mono-api --format "{{.Tag}}" | head -n 1 || true)
          VERSION_WEB=$(docker images mono-web --format "{{.Tag}}" | head -n 1 || true)

          echo "API version: $VERSION_API"
          echo "WEB version: $VERSION_WEB"

          if [ -n "$VERSION_API" ]; then
            docker tag mono-api:$VERSION_API ghcr.io/${{ github.repository_owner }}/mono-api:$VERSION_API
            docker tag mono-api:$VERSION_API ghcr.io/${{ github.repository_owner }}/mono-api:latest
            docker push ghcr.io/${{ github.repository_owner }}/mono-api:$VERSION_API
            docker push ghcr.io/${{ github.repository_owner }}/mono-api:latest
            echo "pushed_api=true" >> $GITHUB_OUTPUT
          else
            echo "pushed_api=false" >> $GITHUB_OUTPUT
          fi

          if [ -n "$VERSION_WEB" ]; then
            docker tag mono-web:$VERSION_WEB ghcr.io/${{ github.repository_owner }}/mono-web:$VERSION_WEB
            docker tag mono-web:$VERSION_WEB ghcr.io/${{ github.repository_owner }}/mono-web:latest
            docker push ghcr.io/${{ github.repository_owner }}/mono-web:$VERSION_WEB
            docker push ghcr.io/${{ github.repository_owner }}/mono-web:latest
            echo "pushed_web=true" >> $GITHUB_OUTPUT
          else
            echo "pushed_web=false" >> $GITHUB_OUTPUT
          fi

      # 按需触发 API 部署
      - name: Trigger API Webhook Deploy
        if: steps.push_images.outputs.pushed_api == 'true'
        run: |
          curl -X POST "${{ secrets.DEPLOY_WEBHOOK_API }}"

      # 按需触发 WEB 部署
      - name: Trigger WEB Webhook Deploy
        if: steps.push_images.outputs.pushed_web == 'true'
        run: |
          curl -X POST "${{ secrets.DEPLOY_WEBHOOK_WEB }}"
